//=============================================================================
// File:		Shader.h
// Created:		2015/02/10
// Last Edited:	2015/02/11
// Copyright:	Daniel Schenker
// Description:	Shader
//=============================================================================

#ifndef SHADER_H
#define SHADER_H

//=============================================================================
//Includes
//=============================================================================

// Third-Party Libraries
//  GLEW
#include <GL/glew.h>

//=============================================================================
//Forward Declarations
//=============================================================================

//=============================================================================
//Enums
//=============================================================================

//=============================================================================
//Class Declarations
//=============================================================================

class Shader
{
public:
	//Constructors
	Shader();
	//Destructor
	~Shader();

	//Member Functions
public:
	// General
	void LoadShaderProgram(const char* pVertexShaderFile, const char* pFragmentShaderFile);
	// Getters
	// Setters
private:
	// General
	void ReadShader(const char* pShaderFile, std::string& shaderData);

	//Member Variables
public:
	GLuint mShaderProgramID;
private:
	GLuint mVertexShader;
	GLuint mFragmentShader;
};

#endif //#ifndef SHADER_H